name: Frontend Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  Linting:
    runs-on: ubuntu-latest
    environment: Development Environment

    steps:
    - name: Check the Repository
      uses: actions/checkout@v3

    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    - name: Install Dependencies
      working-directory: starter/frontend
      run: npm ci

    - name: Run Lint
      working-directory: starter/frontend
      run: npm run lint

  Test:
    runs-on: ubuntu-latest

    steps:
    - name: Check the Repository
      uses: actions/checkout@v3

    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json
        
    - name: Install Dependencies
      working-directory: starter/frontend
      run: npm ci
  
    - name: Run Tests
      working-directory: starter/frontend
      run: npm run test

  Build:
    needs: [Linting, Test]
    runs-on: ubuntu-latest
    
    steps:
    - name: Check the Repository
      uses: actions/checkout@v3
    
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: AKIAZJDG7U3FZ4ZO43UT
        aws-secret-access-key: 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
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and Push Docker Image
      working-directory: starter/frontend
      env:
        IMAGE_TAG: latest
        REPO_NAME: frontend
      run: |
        docker build --build-arg=REACT_APP_MOVIE_API_URL=http://af51576ff96a7456b92fb329546c370e-1268767383.us-east-1.elb.amazonaws.com --tag 638018627275.dkr.ecr.us-east-1.amazonaws.com/frontend:latest .
        docker push 638018627275.dkr.ecr.us-east-1.amazonaws.com/frontend:latest

    - name: Configure Kubeconfig
      run: |
        aws eks update-kubeconfig --name cluster --region us-east-1

    - name: Deploy Docker Image to Amazon EKS
      working-directory: starter/frontend/k8s
      env:
        IMAGE_TAG: latest
        REPO_NAME: frontend
      run: |
        kustomize edit set image frontend=638018627275.dkr.ecr.us-east-1.amazonaws.com/frontend:latest
        kustomize build | kubectl apply -f -

    - name: Get Kubernetes Services -1
      run: kubectl get svc -A

    - name: Get Kubernetes Services -2
      run: kubectl get pods -A
